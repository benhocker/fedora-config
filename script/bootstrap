#!/bin/bash
# Make sure all our local dependencies are available.
readonly QUIET="> /dev/null 2>&1"

# Yum functions
# Not sure if I'll need this yet
#export NOKOGIRI_USE_SYSTEM_LIBRARIES=1

function check_yum() {
  which yum > /dev/null
  if [ "$?" -ne 0 ]; then
    echo "Can't find yum"
    exit
  fi
}

function pkg_install() {
  local package=$1
  yum install -y $package
  if [ "$?" -ne 0 ]; then
    echo "yum failed to install $package"
    exit
  fi
}

function pkg_query() {
  local package=$1

  rpm -qa | grep -qw $package
  if [[ "$?" -eq 0 ]]; then
    echo "$package is installed"
  else
    echo "$package is not installed"
  fi
}

function pkg_update() {
  local package=$1
  yum update -y $package
  if [ "$?" -ne 0 ]; then
    echo "yum failed to update $package"
    exit
  fi
}

function install_prereqs() {
  local package_list=(gcc git gnome-keyring libxml2 libxml2-devel libxslt libxslt-devel ruby ruby-devel)

  for package in "${package_list[@]}"; do
    echo $package
    if [ `pkg_query $package` == "*is not installed*" ]; then
      /usr/bin/sudo -E -p "Need to install necessary dependency ($package), password for sudo: "
      pkg_update
      pkg_install $package
    fi
  done
}

# Ruby functions
function install_bundler() {
  # FIX: only sudo if gem home isn't writable
  if [[ `/usr/bin/gem list -i bundler $QUIET` != 'true' ]]; then
    /usr/bin/sudo -E -p "Need to install Bundler for system ruby, password for sudo: "
    /usr/bin/gem install bundler --no-rdoc --no-ri
  fi
}

function install_binstubs() {
  if [ -e /usr/bin/bundle ]; then
    /usr/bin/bundle install --binstubs bin --path .bundle --quiet "$@"
  else
    #TODO: make this more flexible. for now, if a user doesn't have bundle on either path then at least an error will be raised
    /usr/local/bin/bundle install --binstubs bin --path .bundle --quiet "$@"
  fi
  
  # Fix the binstubs to use system ruby
  if [ -e /usr/bin/sed ]; then
    find bin -not -path 'bin/\.*' -type f -print0 | xargs -0 /usr/bin/sed -i 's|/usr/bin/env ruby|/usr/bin/ruby|g'
  else
    find bin -not -path 'bin/\.*' -type f -print0 | xargs -0 -I % /bin/sed -i 's|/usr/bin/env ruby|/usr/bin/ruby|g' %
  fi
}
  
function clean_old_configs() {
  rm -rf .bundle/config
  rm -rf .librarian/puppet/config
}

function main() {
  install_prereqs
  install_bundler
  install_binstubs
  clean_old_configs
}

main
